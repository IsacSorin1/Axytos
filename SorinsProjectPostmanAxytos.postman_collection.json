{
	"info": {
		"_postman_id": "5c30b447-3836-43a2-969f-2ad04fecc603",
		"name": "SorinsProjectPostmanAxytos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get the AllUserData",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://{{gorest}}/public/v2/users",
					"protocol": "https",
					"host": [
						"{{gorest}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Text\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Changing the userID\", function () {",
							"    pm.variables.replaceIn('id'),",
							"    pm.variables.replaceIn('{{$randomCreditCardMask}}');",
							"});",
							"pm.test(\"Randomize the name\", function () {",
							"    pm.variables.replaceIn('name'),",
							"    pm.variables.replaceIn('{{$$randomFullName}}');",
							"});",
							"pm.test(\"Randomize the userEmail\", function () {",
							"    pm.variables.replaceIn('email'),",
							"    pm.variables.replaceIn('{{$$randomEmail}}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"id\": {{$randomCreditCardMask}},\n        \"name\": {{$$randomFullName}},\n        \"email\": {{$$randomEmail}},\n        \"gender\": \"male\",\n        \"status\": \"active\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{gorest}}/public/v2/users",
					"protocol": "https",
					"host": [
						"{{gorest}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				},
				"description": "Validate loyalty card status.\nTo be used wit mocked up card numbers to test validity or mock responses."
			},
			"response": []
		},
		{
			"name": "Get User details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Text\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{gorest}}/public/v2/users/186243",
					"protocol": "https",
					"host": [
						"{{gorest}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"186243"
					],
					"query": [
						{
							"key": "var",
							"value": "{{my_variable}}",
							"disabled": true
						},
						{
							"key": "var",
							"value": "URL",
							"disabled": true
						}
					]
				},
				"description": "Validate loyalty card status.\nTo be used wit mocked up card numbers to test validity or mock responses."
			},
			"response": []
		},
		{
			"name": "Edit the Username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Text\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{gorest}}/public/v2/users/186243",
					"protocol": "https",
					"host": [
						"{{gorest}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"186243"
					],
					"query": [
						{
							"key": "var",
							"value": "{{my_variable}}",
							"disabled": true
						},
						{
							"key": "var",
							"value": "URL",
							"disabled": true
						}
					]
				},
				"description": "Validate loyalty card status.\nTo be used wit mocked up card numbers to test validity or mock responses."
			},
			"response": []
		},
		{
			"name": "Check if the user is edited",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Text\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{gorest}}/public/v2/users/186243",
					"protocol": "https",
					"host": [
						"{{gorest}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"186243"
					],
					"query": [
						{
							"key": "var",
							"value": "{{my_variable}}",
							"disabled": true
						},
						{
							"key": "var",
							"value": "URL",
							"disabled": true
						}
					]
				},
				"description": "Validate loyalty card status.\nTo be used wit mocked up card numbers to test validity or mock responses."
			},
			"response": []
		},
		{
			"name": "Delete the User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Text\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{gorest}}/public/v2/users/186249",
					"protocol": "https",
					"host": [
						"{{gorest}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"186249"
					],
					"query": [
						{
							"key": "var",
							"value": "{{my_variable}}",
							"disabled": true
						},
						{
							"key": "var",
							"value": "URL",
							"disabled": true
						}
					]
				},
				"description": "Validate loyalty card status.\nTo be used wit mocked up card numbers to test validity or mock responses."
			},
			"response": []
		},
		{
			"name": "Check if the user is deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Text\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{gorest}}/public/v2/users/186249",
					"protocol": "https",
					"host": [
						"{{gorest}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"186249"
					],
					"query": [
						{
							"key": "var",
							"value": "{{my_variable}}",
							"disabled": true
						},
						{
							"key": "var",
							"value": "URL",
							"disabled": true
						}
					]
				},
				"description": "Validate loyalty card status.\nTo be used wit mocked up card numbers to test validity or mock responses."
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "e5128493a1a6cb460530c122f4a06b6bf6d5a00abe185b68fc98c162243bf7e3",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": ""
		},
		{
			"key": "NAME",
			"value": ""
		},
		{
			"key": "E-MAIL",
			"value": ""
		},
		{
			"key": "GENDER",
			"value": "",
			"type": "default"
		},
		{
			"key": "STATUS",
			"value": "",
			"type": "default"
		},
		{
			"key": "USER_ID",
			"value": "",
			"type": "default"
		},
		{
			"value": "",
			"type": "default",
			"disabled": true
		}
	]
}